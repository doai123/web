services:
  mysql:
    image: 'doai123/mysql:latest'
    container_name: 'mysql'
    environment:
      - 'MYSQL_DATABASE=btl_web'
      - 'MYSQL_PASSWORD=Doaivip123@'
      - 'MYSQL_ROOT_PASSWORD=Doaivip123@'
      - 'MYSQL_USER=doai123'
      - 'TZ=Asia/Ho_Chi_Minh'
    ports:
      - '3306:3306'
    volumes:
      - /home/data/mysql:/var/lib/mysql
    networks:
      - my-network

  phpmyadmin:
    image: 'doai123/phpmyadmin:latest'
    container_name: 'phpmyadmin'
    ports:
      - '80:80'  
    environment:
      PMA_HOST: mysql   
      PMA_USER: root   
      PMA_PASSWORD: Doaivip123@ 
      TZ: Asia/Ho_Chi_Minh
    networks:
      - my-network

  springboot-backend:
    image: 'doai123/springboot'# Docker image của ứng dụng Spring Boot
    container_name: 'spring-container'
    environment:
      - 'TZ=Asia/Ho_Chi_Minh'
      - 'SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/btl_web'  
      - 'SPRING_DATASOURCE_USERNAME=doai123'  
      - 'SPRING_DATASOURCE_PASSWORD=Doaivip123@'  
    ports:
      - '8080:8080' 
    depends_on:
      - mysql 
    volumes:
      - /home/data/backend:/backend  
      - /home/data/pictures:/backend/pictures
    command: ["sh", "-c", "cd /backend && mvn clean package -DskipTests && java -jar /backend/target/web.jar"]
    networks:
      - my-network
  nodejs:
        image: 'doai123/nodejs'  
        container_name: 'nodejs'
        environment:
        - 'TZ=Asia/Ho_Chi_Minh'
        ports:
          - '3000:3000'
        volumes:
          - /home/data/frontend:/frontend
          - /home/data/frontend/pm2_data:/root/.pm2
        command: /bin/sh -c "
          if [ ! -f /frontend/first_run_flag ]; then
          echo 'First run detected, installing dependencies...';
          cd /frontend && npm install && npm run build;
          pm2 start 'serve -s dist' --name web;
          touch /frontend/first_run_flag;
          pm2 save;
          pm2 logs;
          else
          echo 'Not the first run, starting the backend...';
          pm2 resurrect;
          cd /frontend && npm install && npm run build;
          pm2 restart web;
          pm2 save;
          pm2 logs;
          fi"
        networks:
          - my-network
  nginx:
    image: 'doai123/nginx'# Docker image của ứng dụng Spring Boot
    container_name: 'nginx'
    environment:
    - 'TZ=Asia/Ho_Chi_Minh'
    ports:
      - '443:443'
    volumes:
      - /home/data/default.conf:/etc/nginx/conf.d/default.conf  
      - /home/data/ssl:/ssl
      - /home/data/frontend/dist:/usr/share/nginx/html/dist
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - my-network
    depends_on:
      - nodejs
    

  portainer:
    image: 'doai123/portainer'
    container_name: 'portainer'
    environment:
    - 'TZ=Asia/Ho_Chi_Minh'
    ports:
      - '9000:9000'  # Port truy cập giao diện Portainer
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'  # Để Portainer có thể quản lý Docker daemon
      - /home/data/portainer:/data'  # Lưu trữ dữ liệu của Portainer
    restart: always
    networks:
      - my-network

volumes:
  mysql-data:
    driver: local

networks:
  my-network:
    driver: bridge
